Idea: Web or app based synth
Goal: Can take in input sound, repitch it to match the pitches of a half of a half grand piano, and make it playable with a computer keyboard. Ex: if shantanu or kegan played their respective instruments, we would be able to reconstruct at least two octaves worth of sounds

Tools:
Python
VS Code
GitHub
Devlog or something
Computer keyboard

Hackathon Info:
6:00pm start on Friday 3/6
Submission by Saturday 3/7 

Python Libraries (Testing):
pip install numpy scipy sounddevice pyaudio audiolazy python-rtmidi PyQt5

GUI libraries:
Tkinter - really easy to use but very old
Dearpygui - okay, weird middle ground between 
Pyqt - written like C++, but the best one

Audio libraries:
pyaudio
Scikitsound
Librosa - for analysis
Base python audio library?
Pygame

0-52:Cos
53-105:Triangle
106-158:Square
159-211:Saw


Look into multicore stuff if high latency, but unlikely to gain any significant efficiencies

https://mixbutton.com/music-tools/frequency-and-pitch/music-note-to-frequency-chart 



Hello, our team name is the Synthesizers! I’m Shantanu, this is Shrey, and this is Kegan. We’re all freshmen here at Clemson, and we made a synth that can be played on laptops such as this! I worked mostly on the organizational aspects, Shrey worked heavily on the octave switching feature, and Kegan did the brunt of the wave generation code. The purpose of this project is to give people who otherwise would not have access to a keyboard the ability to play music for fun. Additionally, we intend to opensource this code, and given it runs locally and offline, we hope it could help people who want to learn music.
The tech-stack consists mostly entirely of Python code written using VS Code. 
If we had more time we would implement a GUI, audio input, and recording features to export music.
